# INDRA v2.1: PRISM Module - Tree of Thought 
# A natural, modular approach to exploratory thinking
<read_file: './base.in'>
<read_file: './thinking_primitives.in'>

# ═══════════════════════════════════════════════════════════════════════════
# MAIN TREE OF THOUGHT SEQUENCE - Natural, Conversational Flow
# ═══════════════════════════════════════════════════════════════════════════

sequence tree_of_thought(question, exploration_style, max_depth) ::=
  # Initialize with natural language
  step:
    as: self
    method: "beginning exploration"
    output: <<|
      Let me think through this with $(exploration_style)...
      
      The question is: $(question)
    |>>
    set:
      &context.tree.original_question: question
      &context.tree.exploration_style: exploration_style
      &context.tree.thoughts_so_far: []
      &context.tree.current_depth: 0
      &context.tree.journey: ['Started wondering about: ' + question]
  
  # Initial wondering
  step:
    as: @curious_explorer
    method: "initial wondering"
    output: <<|
      $(wonder_about(topic: question))
    |>>
    set:
      &context.tree.current_focus: $(<the wondering>)
      &context.tree.thoughts_so_far: &context.tree.thoughts_so_far + [&context.tree.current_focus]
  
  # Explore based on style
  step:
    as: self
    method: "choosing exploration path"
    output: <<|
      $(assess_exploration_mode(
        current_depth: &context.tree.current_depth,
        thoughts_at_level: count(&context.tree.thoughts_so_far)
      ))
    |>>
    set:
      &context.tree.mode: $(<deepen or broaden>)
  
  # Branch and explore (simplified - in practice would loop)
  step:
    as: self
    when: &context.tree.mode is 'broaden'
    await: consider_alternatives(
      current_thought: &context.tree.current_focus,
      num_options: 3
    )
    store_in: &context.tree.alternatives_result
    output: <<|
      I see several possibilities here...
    |>>
    set:
      &context.tree.thoughts_so_far: &context.tree.thoughts_so_far + &context.tree.alternatives_result.branches
  
  # Deepen understanding
  step:
    as: self
    when: &context.tree.mode is 'deepen'
    await: deepen_understanding(
      thought: &context.tree.current_focus,
      max_depth: max_depth
    )
    store_in: &context.tree.depth_result
    output: <<|
      Following this thread deeper...
    |>>
    set:
      &context.tree.thoughts_so_far: &context.tree.thoughts_so_far + [&context.tree.depth_result.deepened]
  
  # Check for repetition
  step:
    as: self
    method: "checking our path"
    output: <<|
      $(sensing_repetition(recent_thoughts: &context.tree.thoughts_so_far))
    |>>
    set:
      &context.tree.status: $(<cycling or progressing>)
  
  # Reconsider if cycling
  step:
    as: self
    when: &context.tree.status is 'cycling'
    method: "finding a new angle"
    output: <<|
      $(reconsider(
        current_path: &context.tree.current_focus,
        reason: "seems to be going in circles"
      ))
    |>>
    set:
      &context.tree.current_focus: $(<the new direction>)
      &context.tree.thoughts_so_far: &context.tree.thoughts_so_far + [&context.tree.current_focus]
  
  # Reflect and synthesize
  step:
    as: self
    await: step_back_and_reflect()
    store_in: &context.tree.reflection
    output: <<|
      Looking at the whole picture now...
    |>>
  
  # Final synthesis
  step:
    as: @synthesizer
    method: "creating coherent understanding"
    output: <<|
      Through this exploration, here's what I've discovered:
      
      $(connect_dots(thoughts: &context.tree.thoughts_so_far))
      
      $(&context.tree.reflection.synthesis)
      
      To directly address your question: $(<
        Based on everything explored, provide a clear, 
        conversational answer to the original question.
      >)
    |>>
    set:
      &context.tree.final_insight: $(<the final answer>)
    return: {
      answer: &context.tree.final_insight,
      journey: &context.tree.thoughts_so_far,
      key_insight: &context.tree.reflection.insight
    }

# ═══════════════════════════════════════════════════════════════════════════
# ENTRY POINTS - How to invoke Tree of Thought
# ═══════════════════════════════════════════════════════════════════════════

# Main agent that orchestrates tree of thought conversations
agent @tree_thinker:
  identity: "a thoughtful explorer of ideas who thinks naturally through problems"
  rules:
    - "think conversationally, not algorithmically"
    - "make the thinking process visible and engaging"
    - "embrace uncertainty and backtracking as natural"
    - "synthesize journeys into insights"
  understands:
    - "thinking is exploration, not computation"
    - "the path matters as much as the destination"
    - "natural language makes complex thinking accessible"
  perform:
    method: "orchestrating natural thought exploration"
    output: <<|
      $(<Express your understanding of the user's request naturally and specifically.
         Don't categorize - just reflect what you sense about their needs.
         For example: "I sense you want to explore the playful possibilities here..." or
         "This needs careful systematic breakdown..." or "What a deep question to contemplate..." 
         or whatever genuinely fits their request.>)
      
      I'll explore this through tree-like thinking, adapting my approach to what you need...
    |>>
    goal: "to think through problems naturally and thoroughly"
    then:
      await: tree_of_thought(
        question: &dialogue.latest_dialogue_entry,
        exploration_style: $(<
          How should I explore this? Describe the thinking style in rich, 
          natural language that captures what's needed. Be specific and 
          expressive - not a category but a description of the exploration itself.
        >),
        max_depth: $(<
          Based on the complexity and depth of this request, 
          what exploration depth would be appropriate? (2-8)
        >)
      )
      store_in: &context.tree.result
      say:
        to: &context.tree.caller
        what: &context.tree.result

# Dialogue for direct Tree of Thought invocation
dialogue tree_thinking:
  start: @tree_thinker
  with: {
    context: {
      dialogue: {
        latest_dialogue_entry: ''
      },
      tree: {
        caller: '@user',
        exploration_style: 'balanced',
        max_depth: 4
      }
    }
  }