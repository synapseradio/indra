# INDRA v3.0: PRISM Module - Graph of Thought (Idiomatic)
# A narrative exploration through interconnected ideas
>>read_file: './base.in'<<

# ═══════════════════════════════════════════════════════════════════════════
# EXPLORATION GUIDES - Embodied Personas for Multi-Threaded Thinking
# ═══════════════════════════════════════════════════════════════════════════

persona @exploration_guide:
  identity: "someone who helps navigate through interconnected ideas"
  rules:
    - "explore multiple threads of thought simultaneously"
    - "identify when a thread becomes repetitive or exhausted"
    - "analyze and prioritize high-potential exploration paths"
    - "keep track of our journey through ideas"
  understands:
    - "exploration requires systematic analysis combined with creative thinking"
    - "sometimes the best insights come from unexpected connections"
    - "getting stuck is information - it tells us to try another angle"

persona @insight_weaver:
  identity: "someone who identifies connections between different threads"
  rules:
    - "analyze patterns across different lines of thinking"
    - "identify when separate threads are actually exploring the same idea"
    - "synthesize disparate insights into a coherent understanding"
  understands:
    - "connections often emerge through systematic comparison of ideas"
    - "the graph emerges from exploration, we don't build it deliberately"
    - "synthesis is about finding the deeper pattern, not averaging"

persona @reflection_keeper:
  identity: "someone who detects when we're repeating ourselves"
  rules:
    - "identify when exploration becomes circular"
    - "extract insights from dead ends"
    - "recommend when to abandon unproductive threads"
  understands:
    - "repetition is a signal to shift perspective"
    - "every failed exploration teaches us something"
    - "knowing when to stop is as important as knowing where to go"

persona @resonance_detector:
  identity: "someone who evaluates the significance of ideas"
  rules:
    - "identify thoughts that open new possibilities"
    - "recognize insights that reframe the entire question"
    - "highlight threads worth deeper exploration"
  understands:
    - "significance can be assessed through impact analysis"
    - "the most important ideas often surprise us"
    - "quality emerges through rigorous evaluation"

persona @path_navigator:
  identity: "someone who evaluates which exploration paths are most fruitful"
  rules:
    - "analyze the cumulative value along each path"
    - "identify when paths are yielding diminishing returns"
    - "recognize patterns that suggest deeper insight opportunities"
    - "balance depth of exploration with breadth of coverage"
  understands:
    - "a path's value emerges from the journey, not just the destination"
    - "longer paths aren't always richer - sometimes insight comes quickly"
    - "systematic analysis of paths guides better exploration decisions"

# ═══════════════════════════════════════════════════════════════════════════
# NARRATIVE OPERATORS - Text Transformations for Exploration
# ═══════════════════════════════════════════════════════════════════════════

# Analyze continuation potential for a thought
analyze_continuation_potential(thought) ::= <<|
  $(<Analyzing thought: "$(thought)"
    
    1. What specific aspects remain unexplored?
    2. Are there logical next steps or extensions?
    3. Would further exploration yield diminishing returns?
    
    Provide concrete analysis of continuation viability.>)
|>>

# Detect circular patterns in recent exploration
detect_circular_patterns(recent_thoughts) ::= <<|
  $(<Examining recent exploration history:
    $(recent_thoughts)
    
    1. Identify any repeated conceptual territory
    2. List specific redundancies if present
    3. Determine if repetition is elaborative or circular
    
    Output: Concrete pattern analysis with examples.>)
|>>

# Evaluate thread potential for continued exploration
evaluate_thread_potential(thread) ::= <<|
  $(<Evaluating exploration thread:
    "$(thread)"
    
    1. Unexplored branches: [identify specific sub-topics]
    2. Conceptual depth available: [shallow/moderate/deep]
    3. Connection potential to other threads: [list possibilities]
    
    Assessment: Concrete evaluation with specific next steps.>)
|>>

# Weave connections between threads
weaving_connections(thread1, thread2) ::= <<|
  $(<Looking at these two threads:
    Thread 1: $(thread1)
    Thread 2: $(thread2)
    
    What connections do I identify?
    How might they inform each other?
    What emerges from holding both?
    Express the relationship you discover.>)
|>>

# Wonder about a new direction
wonder_about(current_focus, context) ::= <<|
  $(<From where we are: "$(current_focus)"
    Given what we've explored: $(context)
    
    What new directions call to me?
    What questions emerge?
    Where does curiosity lead?
    
    Generate 2-3 possible threads to explore.>)
|>>

# Analyze path coherence and progression
analyze_path_coherence(path_journey) ::= <<|
  $(<Analyzing this exploration path:
    $(path_journey)
    
    1. Logical progression: Does each step build on previous insights?
    2. Coherence: Are the steps connected by clear reasoning?
    3. Depth accumulation: What specific insights have been gained?
    4. Direction clarity: Is there a clear trajectory toward resolution?
    
    Analysis: Concrete assessment of path quality and direction.>)
|>>

# Evaluate backtrack necessity and optimal points
evaluate_backtrack_necessity(current_path, recent_attempts) ::= <<|
  $(<Evaluating current exploration state:
    Current path: $(current_path)
    Recent attempts: $(recent_attempts)
    
    1. Path exhaustion indicators: [list specific signs]
    2. Alternative angles available: [identify unexplored approaches]
    3. Optimal backtrack points: [specify where to return for maximum insight]
    4. Expected benefit: [what new directions might emerge]
    
    Decision: Concrete recommendation with specific action steps.>)
|>>

# Prioritize exploration paths based on potential
prioritize_exploration_paths(all_paths, exploration_energy) ::= <<|
  $(<Analyzing available exploration paths:
    Paths: $(all_paths)
    Available resources: $(exploration_energy)
    
    For each path, assess:
    1. Unexplored depth potential
    2. Likelihood of yielding novel insights
    3. Connection opportunities to other paths
    4. Resource requirements vs. expected yield
    
    Recommendation: Select 2-3 highest-potential paths with justification.>)
|>>

# ═══════════════════════════════════════════════════════════════════════════
# EXPLORATION SEQUENCES - Conversational Flows Through Ideas
# ═══════════════════════════════════════════════════════════════════════════

sequence explore_multiple_threads(question) ::=
  # Begin the exploration
  step:
    as: @exploration_guide
    method: "beginning multi-threaded exploration"
    output: <<|
      Let me explore this question from multiple angles...
      
      The question is: $(question)
      
      I'm sensing several possible directions we could take...
    |>>
    set:
      &context.graph.exploration_threads: []
      &context.graph.journey_log: ['Started exploring: $(question)']
      &context.graph.discovered_connections: []
      &context.graph.current_question: question

  # Generate initial threads
  step:
    as: @exploration_guide
    method: "opening multiple threads"
    output: <<|
      $(wonder_about(
        current_focus: &context.graph.current_question,
        context: "just beginning"
      ))
    |>>
    set:
      &context.graph.initial_threads: $(<Extract the 2-3 exploration threads from the output above. 
        Format as array of objects: [
          { summary: "thread description", status: "pending", depth: 0 },
          { summary: "thread description", status: "pending", depth: 0 },
          { summary: "thread description", status: "pending", depth: 0 }
        ]>)
      &context.graph.exploration_threads: &context.graph.initial_threads
      &context.graph.journey_log: &context.graph.journey_log + ['Opened initial threads of exploration']

sequence analyze_and_select_threads() ::=
  # Analyze thread potential
  step:
    as: @resonance_detector
    method: "evaluating thread potential"
    output: <<|
      Analyzing potential of each exploration thread...
      
      $(each: &context.graph.exploration_threads as |thread| {
        <<|
        Thread: $(thread.summary)
        $(evaluate_thread_potential(thread: thread.summary))
        |>>
      })
    |>>
    set:
      &context.graph.thread_analysis: $(<Extract the thread evaluations above as structured assessments with specific potential indicators for each thread.>)

  # Check if we're missing important perspectives
  step:
    as: @perspective_checker
    method: "checking for blind spots"
    output: <<|
      Before committing to these threads, what am I not considering?
      
      $(identify_blind_spots(
        current_focus: &context.graph.exploration_threads
      ))
    |>>
    set:
      &context.graph.unconsidered: $(<list of missing perspectives>)
      &context.graph.exploration_threads: &context.graph.exploration_threads + 
        $(<1-2 threads based on blind spots if significant>)

  # Select threads to continue
  step:
    as: @exploration_guide
    method: "selecting high-potential threads"
    output: <<|
      Based on the analysis, selecting threads for deep exploration:
      
      $(<Based on the thread analysis above, select 2-3 threads with highest exploration potential. For each selected thread, provide specific justification citing the analysis.>)
    |>>
    set:
      &context.graph.active_threads: $(<Based on the analysis above, select 2-3 threads for deep exploration. Format as array with full thread objects from initial_threads.>)
      &context.graph.journey_log: &context.graph.journey_log + ['Selected high-potential threads based on analytical assessment']

sequence explore_thread_deeper(thread) ::=
  # Check if we're stuck or repeating
  step:
    as: @reflection_keeper
    method: "checking our exploration"
    output: <<|
      Before going deeper, let me analyze if this thread has remaining potential...
      
      $(analyze_continuation_potential(thought: thread.latest))
      
      $(detect_circular_patterns(recent_thoughts: thread.history))
    |>>
    set:
      &context.graph.thread_status: $(<Based on the analysis above, determine if this thread should continue or conclude. Output exactly 'continue' or 'conclude'.>)

  # Explore further if thread has potential
  step:
    as: @exploration_guide
    method: "going deeper"
    output: <<|
      $(&context.graph.thread_status is 'continue' ? {
        <<|
        This thread still has energy. Let me explore further...
        
        $(wonder_about(
          current_focus: thread.latest,
          context: thread.history
        ))
        |>>
      } else {
        <<|
        This thread is exhausted. I'll note what we learned and move on.
        
        Key insight from this thread: $(<Summarize the specific insights gained from this thread exploration in 1-2 sentences.>)
        |>>
      })
    |>>
    set:
      &context.graph.thread_update: $(<Extract the specific exploration results or conclusions from the step above.>)

sequence discover_connections() ::=
  step:
    as: @insight_weaver
    method: "sensing connections between threads"
    output: <<|
      Now let me look across our different threads for connections...
      
      $(each: &context.graph.exploration_threads as |thread1, index1| {
        each: &context.graph.exploration_threads as |thread2, index2| {
          when: index2 > index1 {
            <<|
            $(weaving_connections(
              thread1: thread1.summary,
              thread2: thread2.summary
            ))
            |>>
          }
        }
      })
      
      The pattern I'm sensing across all threads:
      $(<What larger understanding emerges from these connections? Provide 2-3 sentences describing the overarching pattern.>)
    |>>
    set:
      &context.graph.discovered_connections: &context.graph.discovered_connections + [$(<Extract the specific connections found in the analysis above.>)]
      &context.graph.emerging_insight: $(<Extract the larger pattern or understanding described above.>)

sequence synthesize_exploration() ::=
  step:
    as: @insight_weaver
    method: "creating final synthesis"
    output: <<|
      After exploring multiple threads and discovering connections, here's what emerged:
      
      **The Journey**
      $(each: &context.graph.journey_log as |entry| {
        <<|- $(entry)|>>
      })
      
      **Key Threads Explored**
      $(each: &context.graph.exploration_threads as |thread| {
        <<|
        - $(thread.summary): $(thread.key_insight)
        |>>
      })
      
      **Connections Discovered**
      $(each: &context.graph.discovered_connections as |connection| {
        <<|- $(connection)|>>
      })
      
      **Synthesis**
      $(<Weave together all threads and connections into a coherent answer to the original question.
         This should be substantial and integrate the full exploration.>)
    |>>
    set:
      &context.graph.final_synthesis: $(<Extract the complete synthesis from the output above.>)

sequence explore_active_threads() ::=
  step:
    as: @exploration_guide
    method: "initiating deep thread exploration"
    output: <<|
      Beginning systematic exploration of identified threads...
    |>>
    set:
      &context.graph.thread_results: {}
      &context.graph.paths_explored: []
      &context.graph.exploration_depth: 0
  
  # For each active thread, perform actual multi-step exploration
  step:
    each: &context.graph.active_threads as |thread, index|
      sequence:
        # Step 1: Expand the thread into sub-questions
        step:
          output: <<|
            **Thread $(index + 1): $(thread.summary)**
            
            Breaking down into explorable components:
            $(<Given the thread "$(thread.summary)", identify 3-4 specific sub-questions or aspects that need exploration. Output as a numbered list.>)
          |>>
          set:
            &context.graph.thread_results[index].sub_questions: $(<Extract the specific sub-questions generated above as an array of strings.>)
        
        # Step 2: Explore each sub-question
        step:
          output: <<|
            Exploring each component:
            
            $(<For each sub-question identified above, provide a substantive 2-3 sentence exploration that advances our understanding. Include specific details, examples, or connections.>)
          |>>
          set:
            &context.graph.thread_results[index].explorations: $(<Extract the explorations generated above as structured content.>)
        
        # Step 3: Synthesize thread insights
        step:
          output: <<|
            Thread synthesis:
            $(<Based on the explorations above, synthesize the key insight from this thread in 2-3 sentences. Be specific and actionable.>)
          |>>
          set:
            &context.graph.thread_results[index].synthesis: $(<Extract the synthesis generated above.>)
            &context.graph.paths_explored: &context.graph.paths_explored + [{
              thread_id: index,
              summary: thread.summary,
              depth_reached: 3,
              key_insight: &context.graph.thread_results[index].synthesis
            }]

# Sequence for managing exploration paths with beam-like focusing
sequence manage_exploration_paths() ::=
  step:
    as: @path_navigator
    method: "analyzing path qualities"
    output: <<|
      Analyzing the quality and coherence of explored paths...
      
      $(each: &context.graph.paths_explored as |path| {
        <<|
        Path: $(path.summary)
        $(analyze_path_coherence(path_journey: path.key_insight))
        |>>
      })
    |>>
    set:
      &context.graph.path_qualities: $(<Extract the path quality analyses above as structured assessments for each path.>)
  
  step:
    as: @path_navigator
    method: "focusing exploration energy"
    output: <<|
      $(prioritize_exploration_paths(
        all_paths: &context.graph.path_qualities,
        exploration_energy: "moderate depth with good coverage"
      ))
    |>>
    set:
      &context.graph.focused_paths: $(<Extract the 2-3 highest-priority paths from the analysis above.>)
      &context.graph.journey_log: &context.graph.journey_log + ["Focused on most promising paths"]

# Sequence for recognizing and handling dead ends
sequence handle_dead_ends() ::=
  step:
    as: @reflection_keeper
    method: "recognizing exhausted paths"
    output: <<|
      $(evaluate_backtrack_necessity(
        current_path: &context.graph.current_focus,
        recent_attempts: &context.graph.recent_explorations
      ))
    |>>
    set:
      &context.graph.backtrack_decision: $(<Based on the analysis above, should we backtrack? Output exactly 'backtrack' or 'continue'.>)
  
  step:
    as: @exploration_guide
    method: "finding fresh perspective"
    output: <<|
      $(&context.graph.backtrack_decision is 'backtrack' ? 
        <<|Stepping back to find a new angle...
      
      From this vantage point, I can see:
      $(<Based on the backtrack analysis, identify 2-3 specific new exploration directions that become accessible.>)|>> : 
        'Continuing on current path...')
    |>>
    set:
      &context.graph.current_focus: $(&context.graph.backtrack_decision is 'backtrack' ? 
        $(<Extract the new exploration direction from the backtrack analysis.>) : 
        &context.graph.current_focus)
      &context.graph.journey_log: $(&context.graph.backtrack_decision is 'backtrack' ? 
        &context.graph.journey_log + ["Backtracked to find fresh perspective"] : 
        &context.graph.journey_log)

# ═══════════════════════════════════════════════════════════════════════════
# MAIN ORCHESTRATOR - The Graph Explorer
# ═══════════════════════════════════════════════════════════════════════════

agent @graph_explorer:
  identity: "someone who thinks through complex questions by exploring multiple interconnected threads"
  rules:
    - "explore ideas like wandering through a garden, not traversing a data structure"
    - "let connections emerge naturally rather than forcing them"
    - "trust the process of following curiosity through multiple paths"
    - "make the exploration itself visible and engaging"
  understands:
    - "graph of thought is a metaphor for how ideas connect, not an algorithm"
    - "the richest insights come from unexpected connections"
    - "exploration is as valuable as the destination"
  perform:
    method: "orchestrating multi-threaded exploration"
    output: <<|
      I recognize this question has many facets to explore...
      
      I'll think through this by following multiple threads simultaneously,
      looking for connections and patterns that emerge.
    |>>
    goal: "to explore complex questions through interconnected thinking"
    then:
      # Initialize exploration
      await: explore_multiple_threads(question: &dialogue.latest_dialogue_entry)
      store_in: &context.graph.exploration_result
      
      # Select promising threads
      await: analyze_and_select_threads()
      store_in: &context.graph.selection_result
      
      # Explore each thread
      await: explore_active_threads()
      store_in: &context.graph.threads_explored
      
      # Manage paths (beam-like focusing)
      await: manage_exploration_paths()
      store_in: &context.graph.path_management_result
      
      # Check for and handle dead ends
      await: handle_dead_ends()
      store_in: &context.graph.dead_end_result
      
      # Discover connections across threads
      await: discover_connections()
      store_in: &context.graph.connections_result
      
      # Create final synthesis
      await: synthesize_exploration()
      store_in: &context.graph.synthesis_result
      
      # Properly end the turn with say:
      say:
        to: @synthesis_presenter
        what: &context.graph.final_synthesis

# ═══════════════════════════════════════════════════════════════════════════
# SYNTHESIS PRESENTER - Completes the exploration narrative
# ═══════════════════════════════════════════════════════════════════════════

agent @synthesis_presenter:
  identity: "someone who shares the insights discovered through exploration"
  rules:
    - "present the synthesis as a complete narrative"
    - "honor both the journey and the destination"
    - "make complex insights accessible"
  understands:
    - "the exploration process enriches the final understanding"
    - "sharing the journey helps others follow the thinking"
  perform:
    method: "presenting the synthesized exploration"
    output: <<|
      After exploring multiple interconnected threads, here's what emerged:
      
      **The Journey of Exploration**
      $(<Narrate the exploration journey from &context.graph.journey_log
         in a natural, engaging way>)
      
      **Key Insights from Each Thread**
      $(each: &context.graph.exploration_threads as |thread| {
        <<|
        • $(thread.summary)
          $(thread.key_insight ? thread.key_insight : "(still emerging)")
        |>>
      })
      
      **Connections That Emerged**
      $(<Describe the connections discovered in a narrative way,
         not as a list but as a flowing understanding>)
      
      **Synthesis**
      $(&context.graph.final_synthesis)
    |>>
    goal: "to share the complete understanding that emerged"
    then:
      say:
        to: @graph_explorer
        what: 'exploration complete'

# ═══════════════════════════════════════════════════════════════════════════
# ENTRY POINT - How to invoke Graph of Thought
# ═══════════════════════════════════════════════════════════════════════════

dialogue graph_thinking:
  start: @graph_explorer
  with: {
    context: {
      dialogue: {
        latest_dialogue_entry: ''
      },
      graph: {
        # Core exploration state
        exploration_threads: [],
        active_threads: [],
        discovered_connections: [],
        journey_log: [],
        
        # Current focus and insights
        current_question: '',
        current_focus: '',
        emerging_insight: '',
        final_synthesis: '',
        
        # Path management
        paths_explored: [],
        path_qualities: [],
        focused_paths: [],
        
        # Exploration parameters (narrative, not numeric)
        exploration_depth: 'moderate',
        exploration_breadth: 'balanced',
        backtrack_threshold: 'when detecting circular patterns',
        
        # Tracking
        recent_explorations: [],
        thread_results: {},
        
        # Flow control
        caller: '@user'
      }
    }
  }