# Fixed INDRA code - previously contained violations
# This file demonstrates proper INDRA structure

@command:
  you:
    possess:
      identifier: TEST_COMMAND
      state:  # Rule 6: state only in topmost you: block
        mode: "testing"
    identity: "test command demonstrator"
    rules:
      - "demonstrate correct INDRA structure"
      - "show proper rule compliance"
    understands:
      - "all mandatory blocks are required"
      - "mutual exclusion must be respected"
    
    # Rule 8: Only respond: blocks here, no direct perform:
    respond:
      on: test_message
      you:
        possess:
          identifier: TEST_HANDLER
        identity: "test message handler"
        rules: ["handle test message properly"]
        understands: ["correct handler structure"]
        perform:
          method: "proper message handling"
          output: "Handling test message correctly..."
          then:
            emit: test_handled
    
    # Rule 10: Handler for emitted message
    respond:
      on: test_handled
      you:
        possess:
          identifier: HANDLED_HANDLER
        identity: "test completion handler"
        rules: ["acknowledge test completion"]
        understands: ["message flow completion"]
        perform:
          method: "acknowledgment"
          output: "Test handled successfully"

# Separate block with proper structure
emitter_block:
  you:
    possess:
      identifier: EMITTER
    identity: "message emitter"
    rules: ["emit messages with handlers"]
    understands: ["proper message flow"]
    perform:
      method: "controlled emission"
      output: "Emitting with handler..."
      then:
        emit: handled_message

# Handler for the emitted message
handler_block:
  you:
    possess:
      identifier: MESSAGE_HANDLER
    identity: "message handler"
    rules: ["handle emitted messages"]
    understands: ["message reception"]
    
    respond:
      on: handled_message
      you:
        possess:
          identifier: HANDLED_MSG_HANDLER
        identity: "specific message handler"
        rules: ["process handled_message"]
        understands: ["message processing"]
        perform:
          method: "message processing"
          output: "Message received and processed"

# Proper nested structure without invalid state placement
nested_example:
  you:
    possess:
      identifier: OUTER
    identity: "outer context"
    rules: ["contain nested handlers"]
    understands: ["proper nesting structure"]
    
    respond:
      on: something
      you:
        possess:
          identifier: INNER
          # No state here - Rule 6 compliance
        identity: "inner context handler"
        rules: ["handle in nested context"]
        understands: ["nested handler rules"]
        use:
          state:  # Proper state access declaration
            - mode
        perform:
          method: "nested handling"
          output: "Processing in nested context..."