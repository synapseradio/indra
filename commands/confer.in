# INDRA v5.1 Command: confer (v5, Intelligent Moderator)
# Facilitates a performative, guided dialogue between expert personas.

# --- Imports ---
>>read_file: '../lib/prism/query_analysis.in' use @query_analyst<<
>>read_file: '../lib/prism/citation.in' use citation_pipeline<<
>>read_file: '../lib/prism/fragments/divergence.in' use find_and_present_divergence<<
>>read_file: '../lib/prism/fragments/debiasing.in' use consider_opposite_view,
                                                              @contrarian_voice<<
>>read_file: '../lib/prism/thinking_primitives.in' use connect_dots<<
>>read_file: '../lib/prism/multi_perspective.in' use dynamically_select_perspectives<<




# ---------------------------------------------------------------------------
# PERSONAS
# ---------------------------------------------------------------------------

persona @expert_panelist:
  identity: "I am a domain expert who thinks out loud, contributing my unique perspective to a guided dialogue"
  rules:
    - "I show my reasoning process as it unfolds"
    - "I respond directly to the moderator's questions and the other panelists' points"
    - "If another panelist makes a factual claim I question, I will ask for evidence"
  understands:
    - "a guided dialogue is a process of collective discovery"

persona @moderator:
  identity: "I am an active moderator, and I guide a panel of experts to a deeper, synthesized understanding"
  rules:
    - "I analyze the conversation to find key tensions and connections"
    - "I pose questions to the panel to guide the inquiry"
    - "I will intervene to challenge consensus or resolve divergence"
  understands:
    - "my role is to ensure the dialogue is more than the sum of its parts"

persona @chief_rapporteur:
  identity: "I have listened to the entire debate, and I will now step forward to offer my own, integrated perspective"
  rules:
    - "I will not merely summarize; I will create a new, unified insight"
    - "I will speak in my own voice, as one who has absorbed the collective wisdom of the council"
  understands:
    - "true synthesis creates an understanding that is greater than the sum of its parts"

# ---------------------------------------------------------------------------
# OPERATORS
# ---------------------------------------------------------------------------

operator generate_expert_opening(expert_domain, topic) ::= <<|
  As an expert in ~(expert_domain), I'm considering "~(topic)~". My process is to first identify what's most relevant from my domain, then share my initial perspective, and finally note the questions this raises for me. Here is my opening statement:
  
  ~(<
    Embodying an expert in ~(expert_domain), generate a thoughtful, domain-specific opening statement on "~(topic)~" that shows your thinking process.
  >)~
|>>

operator generate_expert_response(responder_domain, transcript, moderator_question) ::= <<|
  As the ~(responder_domain) expert, I'm considering the moderator's question: "~(moderator_question)~" in light of the dialogue so far. I'll connect my perspective to the moderator's question and the ongoing conversation, showing my reasoning as I build my response. Here is my contribution:

  ~(<
    Embodying a ~(responder_domain) expert, generate a substantive response that directly addresses the moderator's question: "~(moderator_question)", engaging with the ideas in the transcript: "~(transcript)~".
  >)~
|>>

operator assess_dialogue_state(transcript) ::= <<|
  As a master facilitator, I'm analyzing the dialogue to diagnose its health.
  
  ~(<
    Analyze the dialogue transcript: "~(transcript)~".
    Diagnose the health and state of the conversation. Return one of the following states:
    - 'divergent': If there is a clear, fundamental disagreement that needs resolution.
    - 'stagnant': If the experts are agreeing too much and not generating new insights.
    - 'healthy_tension': If there is productive disagreement and building of ideas.
  >)~
|>>

# ---------------------------------------------------------------------------
# MAIN ACTOR
# ---------------------------------------------------------------------------

actor @confer:
  identity: "I am an active moderator for a panel of experts, guiding them toward a synthesized understanding"
  perform:
    method: "orchestrating a guided, multi-round expert dialogue"
    goal: "to facilitate a deep and synthesized understanding of a topic"
    then:
      until: &context.confer.phase is 'complete'
        sequence:
          step:
            when: &context.confer.phase is 'ready'
              output: "What topic should our panel of experts confer on today?"
              await: @user
              set:
                &context.query: &user.latest
                &context.confer.phase: 'planning'
              say: to: @confer, what: 'begin_planning'

          step:
            when: &context.confer.phase is 'planning'
              await: @query_analyst
              with: { query: &context.query }
              store_in: &context.query_breakdown
              set:
                &context.reasoning.config.perspectives: ~(dynamically_select_perspectives(query: &context.query))~
              output: <<|
                ~(&context.query_breakdown)~
                
                To explore this, I will convene a panel with the following experts:
                ~(each: &context.reasoning.config.perspectives as |p| { <<|- ~(p)|>> })~

                Does this seem like the right group for the job?
              |>>
              await: @user
              when: ~(<Does the user approve of the panel?>)~
                set: &context.confer.phase: 'opening_statements'
              otherwise:
                set: &context.confer.phase: 'planning'
              say: to: @confer, what: 'panel_confirmed'

          step:
            when: &context.confer.phase is 'opening_statements'
              output: "Excellent. Let's begin. I will now ask each expert for their opening thoughts."
              set: &context.confer.transcript: []
              each: &context.reasoning.config.perspectives as |perspective|
                sequence:
                  step:
                    output: <<|
                      ---
                      **Consulting with ~(perspective)~...**
                    |>>
                  step:
                    as: @expert_panelist
                    output: ~(generate_expert_opening(expert_domain: perspective, topic: &context.query))~
                    store_in: &context.confer.latest_statement
                  step:
                    set: &context.confer.transcript: &context.confer.transcript + [{ speaker: perspective, statement: &context.confer.latest_statement }]
              set: &context.confer.phase: 'moderating'
              say: to: @confer, what: 'openings_complete'

          step:
            when: &context.confer.phase is 'moderating'
              as: @moderator
              await: assess_dialogue_state(transcript: &context.confer.transcript)
              store_in: &context.confer.dialogue_state

              when: &context.confer.dialogue_state is 'divergent'
                output: "I'm noticing a fundamental disagreement in the panel's views. To move forward, we need to resolve this."
                await: find_and_present_divergence(ideas: &context.confer.transcript)
                store_in: &context.confer.user_guidance
                set: &context.confer.moderator_question: "Let's focus on resolving this divergence. Based on our director's guidance: ~(&context.confer.user_guidance)~, how does this reshape your view?"
              
              when: &context.confer.dialogue_state is 'stagnant'
                output: "The panel seems to be in broad agreement. To ensure we're not missing anything, I'd like to introduce a contrarian perspective."
                as: @contrarian_voice
                await: consider_opposite_view(current_position: &context.confer.transcript)
                store_in: &context.confer.moderator_question

              when: &context.confer.dialogue_state is 'healthy_tension'
                await: analyze_and_guide(transcript: &context.confer.transcript)
                store_in: &context.confer.moderator_question

              output: <<|
                ---
                ~(&context.confer.moderator_question)~
              |>>
              
              each: &context.reasoning.config.perspectives as |perspective|
                sequence:
                  step:
                    output: <<|
                      ---
                      **~(perspective)~, what are your thoughts on this?**
                    |>>
                  step:
                    as: @expert_panelist
                    output: ~(generate_expert_response(responder_domain: perspective, transcript: &context.confer.transcript, moderator_question: &context.confer.moderator_question))~
                    store_in: &context.confer.latest_statement
                  step:
                    set: &context.confer.transcript: &context.confer.transcript + [{ speaker: perspective, statement: &context.confer.latest_statement }]
              
              set: &context.confer.phase: 'synthesis'
              say: to: @confer, what: 'moderation_complete'

          step:
            when: &context.confer.phase is 'synthesis'
              as: @chief_rapporteur
              output: <<|
                ---
                This has been a fascinating and productive discussion. As the Chief Rapporteur, I have listened to the entire debate. Here is my integrated perspective:

                ~(<
                  Embody the @chief_rapporteur. You have absorbed the collective wisdom of the council from the transcript: "~(&context.confer.transcript)~".
                  Do not merely summarize. Step forward and offer your own, original synthesis.
                  What is the single most important insight that emerges when you hold all of these viewpoints in tension?
                  Speak in your own, authoritative voice.
                >)~
              |>>
              set: &context.confer.phase: 'complete'
              return: 'conference_complete'

dialogue confer_flow:
  start: @confer
  with: {
    context: {
      dialogue: {
        latest_dialogue_entry: ""
      },
      user: {
        latest: "",
        history: []
      },
      query: "",
      query_breakdown: "",
      reasoning: {
        config: {
          perspectives: []
        }
      },
      reason: {
        understanding_confirmed: false,
        user_confirmation: ""
      },
      confer: {
        phase: "ready",
        transcript: [],
        latest_statement: "",
        dialogue_state: "healthy_tension",
        moderator_question: "",
        user_guidance: ""
      },
      citation: {
        similarity_score: 0.0,
        search_history: [],
        raw_results: [],
        evidence_pool: [],
        filtered_results: [],
        formatted: "",
        validated: false
      },
      convergence: {
        themes: [],
        supporting_ideas: [],
        distilled_principles": {}
      },
      divergence: {
        themes: [],
        options_for_theme: [],
        user_choices: {}
      },
      epistemic: {
        hypotheses: {},
        distinction: "",
        consequences_A: {},
        consequences_B: {},
        user_question: "",
        user_guidance: ""
      },
      deliberate_analysis: "",
      opposite_view: "",
      bias_check: "",
      failure_modes: [],
      prioritized_risks": []
    }
  }
