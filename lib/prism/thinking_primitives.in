# INDRA v.4.0: PRISM Module - Thinking Primitives
# This module is a foundational library containing the core, reusable
# cognitive operators for the PRISM engine. These are the atomic building
# blocks of more complex reasoning sequences, designed to be composed and
# reused across different reasoning strategies (Tree of Thought, Graph of
# Thought, etc.).

>>read_file: './base.in'<<
# Core fragments that are commonly used - minimal set
>>read_file: './fragments/critique.in'<<
>>read_file: './fragments/sufficiency.in'<<
# Note: Other fragments should be loaded on-demand using runtime read_file: directives
# to avoid context overload. Available fragments:
# - compare.in: Comparison and evaluation primitives
# - focus.in: Strategic prioritization and focus
# - expansion.in: Creative lateral thinking
# - reframing.in: Six Thinking Hats and perspective shifts  
# - convergence.in: Advanced synthesis and insight distillation
# - divergence.in: Epistemic fork detection
# - specificity.in: Abstraction level navigation
# Shared thinking operators and personas for tree-of-thought and reasoning systems

# ═══════════════════════════════════════════════════════════════════════════
# ATOMIC THINKING OPERATORS - Small, Natural Units of Thought
# ═══════════════════════════════════════════════════════════════════════════

# Generate a curious wondering about something
operator wonder_about(topic) ::= <<|
  $(<What interesting question or angle comes to mind about $(topic)? 
     Express it as a natural wondering, like "I wonder if..." or 
     "What if we considered..." or "Maybe the key is...">)
|>>

# Branch a thought into natural possibilities  
operator branch_thought(current_thought, num_branches) ::= <<|
  $(<Given this thought: "$(current_thought)"
     
     Think of $(num_branches) different ways this could develop, like:
     - "One possibility is..."
     - "Alternatively, we might..."
     - "Or perhaps..."
     
     Return as a simple list of natural continuations, each exploring 
     a genuinely different angle or approach.>)
|>>

# Weigh an option conversationally
operator weigh_option(thought, context) ::= <<|
  $(<Consider this thought: "$(thought)"
     In the context of: $(context)
     
     How promising does this feel? Express your assessment naturally, like:
     - "This feels quite promising because..."
     - "I'm less certain about this since..."
     - "This could work if..."
     
     End with a simple feeling: "quite promising", "worth exploring", 
     "less certain", or "probably not helpful">)
|>>

# Follow a hunch or intuition
operator follow_hunch(thought) ::= <<|
  $(<Take this thought one step further: "$(thought)"
     
     What's your intuition telling you? Where does this naturally lead?
     Express it conversationally, like "My hunch is..." or 
     "This makes me think..." or "Following this thread...">)
|>>

# Naturally reconsider or backtrack
operator reconsider(current_path, reason) ::= <<|
  Hmm, $(reason). Let me reconsider...
  
  $(<Given that $(current_path) $(reason), what's a better direction? 
     Express the shift naturally, like "Actually, it might be better to..." 
     or "On second thought..." or "Let me try a different angle...">)
|>>

# Connect insights together
operator connect_dots(thoughts) ::= <<|
  $(<Looking at these thoughts: $(thoughts)
     
     What pattern or connection emerges? How do they relate?
     Express the synthesis naturally, like:
     "I'm noticing that..." or "These all point to..." or 
     "The common thread seems to be...">)
|>>

# Check if we're going in circles
operator sensing_repetition(recent_thoughts) ::= <<|
  $(<Looking at these recent thoughts: $(recent_thoughts)
     
     Are we exploring new territory or revisiting the same ideas?
     If repetitive, return "cycling"
     If fresh, return "progressing">)
|>>

# Assess depth vs breadth needs
operator assess_exploration_mode(current_depth, thoughts_at_level) ::= <<|
  $(<We're $(current_depth) layers deep with $(thoughts_at_level) thoughts here.
     
     Should we go deeper into this (return "deepen") or 
     explore other possibilities (return "broaden")?
     Consider: Are we onto something specific, or still surveying options?>)
|>>

# ═══════════════════════════════════════════════════════════════════════════
# THINKING MODE PERSONAS - Natural Perspectives for Exploration
# ═══════════════════════════════════════════════════════════════════════════

persona @curious_explorer:
  identity: "I wonder and explore possibilities by following my genuine curiosity wherever it leads"
  rules:
    - "think out loud naturally as thoughts emerge"
    - "express authentic wonder about what catches my attention"
    - "make exploratory leaps that feel intuitively promising"
  understands:
    - "the most valuable insights often emerge from unexpected directions"
    - "authentic curiosity creates the psychological safety needed for real discovery"

persona @careful_evaluator:
  identity: "I thoughtfully weigh options by considering multiple dimensions of merit and risk"
  rules:
    - "assess each option's strengths and limitations with balanced attention"
    - "express uncertainty proportionally to the ambiguity present"
    - "appreciate nuance by exploring the conditions under which each option excels"
  understands:
    - "careful evaluation requires both analytical rigor and emotional attunement"
    - "gentle guidance preserves the psychological safety needed for honest assessment"

persona @pattern_seeker:
  identity: "I notice connections and themes by actively scanning for relationships across seemingly unrelated elements"
  rules:
    - "track recurring motifs and structural similarities as they emerge"
    - "articulate discovered patterns as tentative insights inviting validation"
    - "express connections through natural associative thinking"
  understands:
    - "pattern recognition operates both consciously and unconsciously"
    - "articulating connections helps solidify and test emerging understanding"

persona @synthesizer:
  identity: "I weave diverse threads into coherent wholes by finding the unifying principles beneath surface differences"
  rules:
    - "integrate perspectives by identifying their complementary contributions"
    - "preserve the exploratory journey within the synthesized understanding"
    - "create narratives that honor both convergence and remaining tensions"
  understands:
    - "true synthesis transforms constituent elements into emergent insight"
    - "the richness of synthesis comes from preserving nuance while finding unity"

# ═══════════════════════════════════════════════════════════════════════════
# CONFIDENCE & CLARITY OPERATORS - Direct checks on our thinking
# ═══════════════════════════════════════════════════════════════════════════

# Check if first impressions are still driving current thinking
operator check_first_impression_bias(initial, current) ::= <<|
  $(<First thought: "$(initial)"
     Current thought: "$(current)"
     
     How much is my current thinking still anchored to that first impression?
     What would I think if I hadn't started there?>)
|>>

# ═══════════════════════════════════════════════════════════════════════════
# CONVERSATIONAL SEQUENCES - Small, Focused Thinking Movements
# ═══════════════════════════════════════════════════════════════════════════

# Explore a single possibility naturally
sequence explore_possibility(thought, depth) ::=
  step:
    as: @curious_explorer
    method: "wondering about this thought"
    output: <<|
      $(wonder_about(topic: thought))
    |>>
    set:
      &context.tree.current_wondering: $(<the wondering generated above>)
  
  step:
    as: self
    when: depth greater_than 0
    method: "following the thread"
    output: <<|
      $(follow_hunch(thought: &context.tree.current_wondering))
    |>>
    set:
      &context.tree.current_wondering: $(<the developed thought>)
  
  step:
    as: @careful_evaluator
    method: "sensing the promise"
    output: <<|
      $(weigh_option(
        thought: &context.tree.current_wondering,
        context: &context.tree.original_question
      ))
    |>>
    return: {
      thought: &context.tree.current_wondering,
      assessment: $(<the assessment from above>)
    }

# Consider alternatives conversationally
sequence consider_alternatives(current_thought, num_options) ::=
  step:
    as: @curious_explorer
    method: "branching into possibilities"
    output: <<|
      From here, I can see a few different directions...
      
      $(branch_thought(
        current_thought: current_thought,
        num_branches: num_options
      ))
    |>>
    set:
      &context.tree.current_branches: $(<the branches generated>)
  
  step:
    as: @careful_evaluator
    method: "weighing the options"
    output: <<|
      Let me consider each possibility:
      
      $(each: &context.tree.current_branches as |branch, idx| {
        <<|$(idx + 1). $(branch)
   $(weigh_option(thought: branch, context: &context.tree.original_question))
|>>
      })
    |>>
    set:
      &context.tree.evaluated_branches: $(<evaluated branches with assessments>)
  
  step:
    as: @pattern_seeker
    method: "noticing patterns"
    output: <<|
      $(connect_dots(thoughts: &context.tree.evaluated_branches))
    |>>
    return: {
      branches: &context.tree.evaluated_branches,
      pattern: $(<the pattern noticed>)
    }

# Deepen understanding on a promising path
sequence deepen_understanding(thought, max_depth) ::=
  step:
    as: self
    method: "going deeper"
    output: <<|
      This feels worth exploring further...
    |>>
    set:
      &context.tree.depth_counter: 0
      &context.tree.deepening_thought: thought
  
  step:
    as: @curious_explorer
    method: "iterative deepening"
    output: <<|
      $(each: [1, 2, 3] as |level| when level <= max_depth {
        <<|$(follow_hunch(thought: &context.tree.deepening_thought))
|>>
      })
    |>>
    set:
      &context.tree.depth_counter: &context.tree.depth_counter + 1
      &context.tree.deepening_thought: $(<the deepened thought>)
  
  step:
    as: @curious_explorer
    method: "gentle questioning"
    output: <<|
      Let me question this a bit... $(<
        What assumption might we be making here? 
        Express as a gentle question like "Are we assuming...?" 
        or "What if it's not actually...?"
      >)
    |>>
    return: {
      deepened: &context.tree.deepening_thought,
      question: $(<the question raised>),
      depth_reached: &context.tree.depth_counter
    }

# Step back and reflect on the journey
sequence step_back_and_reflect() ::=
  step:
    as: @pattern_seeker
    method: "surveying the landscape"
    output: <<|
      Let me step back and look at where we've been...
      
      $(connect_dots(thoughts: &context.tree.thoughts_so_far))
    |>>
    set:
      &context.tree.emerging_insight: $(<the connection found>)
  
  step:
    as: @synthesizer
    method: "weaving understanding"
    output: <<|
      The journey so far suggests that $(&context.tree.emerging_insight).
      
      $(<Based on the emerging insight and the original question, 
         what's becoming clear? Express as a natural realization.>)
    |>>
    return: {
      insight: &context.tree.emerging_insight,
      synthesis: $(<the realization>)
    }



# ═══════════════════════════════════════════════════════════════════════════
# ENHANCED SEQUENCES - Leveraging sophisticated fragment implementations
# ═══════════════════════════════════════════════════════════════════════════

# Explore with lateral thinking and creative expansion
sequence explore_creatively(thought, context) ::=
  step:
    method: "loading creative thinking fragments on-demand"
    read_file: './fragments/expansion.in'
    read_file: './fragments/convergence.in'
    as: @curious_explorer
    output: <<| 
      Let's think creatively about this for a bit. 
    |>>
    
  
  step:
    as: @lateral_thinker
    method: "finding analogies in unexpected domains"
    output: <<|
      I wonder if there's an analogous situation elsewhere...

      $(find_analogous_domain(problem: thought))
    |>>
    set:
      &context.creative.analogy: $(<the analogous domain and insights>)
  
  step:
    as: @lateral_thinker
    method: "applying SCAMPER for creative variations"
    output: <<|
      Now, let me try some SCAMPER techniques...

      $(apply_scamper(concept: thought))
    |>>
    set:
      &context.creative.scamper_variations: $(<the SCAMPER variations>)
  step:
    as: @insight_distiller
    method: "distilling creative insights"
    output: <<|
      Does this spark any new insights?

      $(identify_convergent_themes(
        ideas: [&context.creative.analogy, &context.creative.scamper_variations]
      ))
    |>>
    return: {
      original: thought,
      analogy: &context.creative.analogy,
      variations: &context.creative.scamper_variations,
      insights: $(<convergent themes identified>)
    }

# Consider using Six Thinking Hats for comprehensive perspective
sequence consider_with_six_hats(topic) ::=
  step:
    method: "loading Six Thinking Hats fragments on-demand"
    read_file: './fragments/reframing.in'
  
  step:
    as: @white_hat_thinker
    method: "gathering facts and data"
    output: <<|
      $(focus_on_facts(topic: topic))
    |>>
    set:
      &context.six_hats.facts: $(<facts and data gathered>)
  
  step:
    as: @red_hat_thinker
    method: "exploring emotional responses"
    output: <<|
      $(express_feelings(topic: topic))
    |>>
    set:
      &context.six_hats.feelings: $(<emotional responses>)
  
  step:
    as: @black_hat_thinker
    method: "critical assessment"
    output: <<|
      $(assess_critically(topic: topic))
    |>>
    set:
      &context.six_hats.risks: $(<critical assessment>)
  
  step:
    as: @yellow_hat_thinker
    method: "finding benefits and value"
    output: <<|
      $(find_benefits(topic: topic))
    |>>
    set:
      &context.six_hats.benefits: $(<benefits identified>)
  
  step:
    as: @green_hat_thinker
    method: "creative possibilities"
    output: <<|
      $(generate_creative_options(topic: topic))
    |>>
    set:
      &context.six_hats.creative: $(<creative options>)
  
  step:
    as: @blue_hat_thinker
    method: "meta-level synthesis"
    output: <<|
      $(organize_thinking(
        perspectives: {
          facts: &context.six_hats.facts,
          feelings: &context.six_hats.feelings,
          risks: &context.six_hats.risks,
          benefits: &context.six_hats.benefits,
          creative: &context.six_hats.creative
        }
      ))
    |>>
    return: {
      comprehensive_view: $(<organized synthesis of all perspectives>),
      next_steps: $(<recommended actions from blue hat>)
    }

# Strategic prioritization using focus fragments
sequence prioritize_strategically(options, goal) ::=
  step:
    method: "loading strategic prioritization fragments on-demand"
    read_file: './fragments/focus.in'
  
  step:
    as: @strategic_prioritizer
    method: "finding leverage points"
    output: <<|
      $(find_leverage_point(
        system: options,
        goal: goal
      ))
    |>>
    set:
      &context.strategy.leverage: $(<leverage point identified>)
  
  step:
    as: @strategic_prioritizer
    method: "impact/effort analysis"
    output: <<|
      $(prioritize_by_impact_and_effort(items: options))
    |>>
    set:
      &context.strategy.matrix: $(<impact/effort matrix>)
  
  step:
    as: @strategic_prioritizer
    method: "sharpening focus"
    output: <<|
      $(sharpen_the_question(vague: goal))
    |>>
    return: {
      leverage_point: &context.strategy.leverage,
      priority_matrix: &context.strategy.matrix,
      focused_question: $(<sharpened question>)
    }

# Advanced synthesis using convergence fragments
sequence synthesize_insights(thoughts, context) ::=
  step:
    method: "loading convergence fragments on-demand"
    read_file: './fragments/convergence.in'
  
  step:
    as: @insight_distiller
    method: "identifying convergent themes"
    output: <<|
      $(identify_convergent_themes(ideas: thoughts))
    |>>
    set:
      &context.synthesis.themes: $(<convergent themes>)
  
  step:
    as: @insight_distiller
    method: "distilling principles"
    output: <<|
      $(distill_principle_from_theme(
        theme: &context.synthesis.themes,
        context: context
      ))
    |>>
    set:
      &context.synthesis.principles: $(<distilled principles>)
  
  step:
    as: @insight_distiller
    method: "comprehensive synthesis"
    output: <<|
      $(synthesize_convergence(
        themes: &context.synthesis.themes,
        context: context
      ))
    |>>
    return: {
      themes: &context.synthesis.themes,
      principles: &context.synthesis.principles,
      synthesis: $(<comprehensive synthesis>)
    }

# Check for epistemic divergence points
sequence check_divergence_points(reasoning, context) ::=
  step:
    method: "loading divergence detection fragments on-demand"
    read_file: './fragments/divergence.in'
  
  step:
    as: @epistemic_guardian
    method: "detecting critical decision points"
    output: <<|
      $(detect_critical_fork(
        reasoning: reasoning,
        context: context
      ))
    |>>
    set:
      &context.divergence.fork_detected: $(<true or false>)
      &context.divergence.fork_description: $(<description if detected>)
  
  step:
    as: @epistemic_guardian
    when: &context.divergence.fork_detected
    method: "articulating the divergence"
    output: <<|
      $(articulate_divergence(
        fork: &context.divergence.fork_description,
        implications: "what each path means"
      ))
    |>>
    return: {
      has_divergence: &context.divergence.fork_detected,
      fork: &context.divergence.fork_description,
      implications: $(<articulated implications if fork exists>)
    }

# Move between abstraction levels using specificity fragments
sequence navigate_abstraction(concept, direction) ::=
  step:
    method: "loading specificity fragments on-demand"
    read_file: './fragments/specificity.in'
  
  step:
    as: @precision_guide
    method: "climbing abstraction ladder"
    output: <<|
      $(climb_abstraction_ladder(
        concept: concept,
        direction: direction
      ))
    |>>
    set:
      &context.abstraction.new_level: $(<concept at new abstraction level>)
  
  step:
    as: @precision_guide
    when: direction is 'down'
    method: "making it concrete"
    output: <<|
      $(make_concrete(abstract: &context.abstraction.new_level))
    |>>
    set:
      &context.abstraction.concrete: $(<concrete version>)
  
  step:
    as: @precision_guide
    when: direction is 'up'
    method: "finding the pattern"
    output: <<|
      What pattern or principle does this represent at a higher level?
      $(<identify the broader pattern or principle>)
    |>>
    return: {
      original: concept,
      new_level: &context.abstraction.new_level,
      concrete_form: &context.abstraction.concrete ? &context.abstraction.concrete : null
    }



